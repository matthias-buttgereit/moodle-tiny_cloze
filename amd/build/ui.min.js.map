{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Plugin tiny_cloze for TinyMCE v6 in Moodle.\n *\n * @module      tiny_cloze/ui\n * @copyright   2023 MoodleDACH\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\nimport Modal from \"core/modal\";\nimport Mustache from 'core/mustache';\nimport {get_string as getString} from 'core/str';\nimport {component} from './common';\n\n// Helper functions.\nconst isNull = a => a === null || a === undefined;\nconst strdecode = t => String(t).replace(/\\\\(#|\\}|~)/g, '$1');\nconst strencode = t => String(t).replace(/(#|\\}|~)/g, '\\\\$1');\nconst indexOfNode = (list, node) => {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i] === node) {\n      return i;\n    }\n  }\n  return -1;\n};\nconst getUuid = function() {\n  if (!isNull(crypto.randomUUID)) {\n    return crypto.randomUUID();\n  }\n  return 'ed-cloze-' + Math.floor(Math.random() * 100000).toString();\n};\n\n// This is a specific helper function to return the options html for the fraction select element.\nconst getFractionOptions = s => {\n  let html = '<option value=\"\">' + STR.incorrect + '</option><option value=\"=\"';\n  if (s === '=') {\n    html += ' selected=\"selected\"';\n  }\n  html += '>' + STR.correct + '</option>';\n  FRACTIONS.forEach(item => {\n    html += '<option value=\"' + item.value + '\"';\n    if (item.value.toString() === s) {\n      html += ' selected=\"selected\"';\n    }\n    html += '>' + item.value + '%</option>';\n  });\n  return html;\n};\n// Marker class and the whole span element that is used to encapsulate the cloze question text.\nconst markerClass = 'cloze-question-marker';\nconst markerSpan = '<span contenteditable=\"false\" class=\"' + markerClass + '\" data-mce-contenteditable=\"false\">';\nconst markerNewPos = '{cloze_question_new_marker}';\n// Regex to recognize the question string in the text e.g. {1:NUMERICAL:...} or {:MULTICHOICE:...}\n// eslint-disable-next-line max-len\nconst reQtype = /\\{([0-9]*):(MULTICHOICE(_H|_V|_S|_HS|_VS)?|MULTIRESPONSE(_H|_S|_HS)?|NUMERICAL|SHORTANSWER(_C)?|SAC?|NM|MWC?|M[CR](V|H|VS|HS)?):(.*?)\\}/g;\n\n// CSS classes that are used in the modal dialogue.\nconst CSS = {\n  ANSWER: 'tiny_cloze_answer',\n  ANSWERS: 'tiny_cloze_answers',\n  ADD: 'tiny_cloze_add',\n  CANCEL: 'tiny_cloze_cancel',\n  DELETE: 'tiny_cloze_delete',\n  FEEDBACK: 'tiny_cloze_feedback',\n  FRACTION: 'tiny_cloze_fraction',\n  LEFT: 'tiny_cloze_col0',\n  LOWER: 'tiny_cloze_down',\n  RIGHT: 'tiny_cloze_col1',\n  MARKS: 'tiny_cloze_marks',\n  DUPLICATE: 'tiny_cloze_duplicate',\n  RAISE: 'tiny_cloze_up',\n  SUBMIT: 'tiny_cloze_submit',\n  SUMMARY: 'tiny_cloze_summary',\n  TOLERANCE: 'tiny_cloze_tolerance',\n  TYPE: 'tiny_cloze_qtype'\n};\nconst TEMPLATE = {\n    FORM: '<div class=\"tiny_cloze\">' +\n      '<p>{{name}} ({{qtype}})</p>' +\n      '<form name=\"tiny_cloze_form\">' +\n      '<div class=\"row ml-0\">' +\n      '<div class=\"form-group\">' +\n      '<label for=\"{{elementid}}_mark\">{{STR.defaultmark}}</label>' +\n      '<input id=\"{{elementid}}_mark\" type=\"text\" value=\"{{marks}}\" ' +\n      'class=\"{{CSS.MARKS}} form-control d-inline mx-1\" />' +\n      '<a class=\"{{CSS.ADD}}\" title=\"{{STR.addmoreanswerblanks}}\">' +\n      '<img class=\"icon_smallicon\" src=\"' +\n      M.util.image_url('t/add', 'core') + '\"></a>' +\n      '</div>' +\n      '</div>' +\n      '<div class=\"{{CSS.ANSWERS}} mb-3\">' +\n      '<ol class=\"pl-3\">{{#answerdata}}' +\n      '<li class=\"mt-3\"><div class=\"row ml-0\">' +\n      '<div class=\"{{CSS.LEFT}} form-group\">' +\n      '<label for=\"{{id}}_answer\">{{STR.answer}}</label>' +\n      '<input id=\"{{id}}_answer\" type=\"text\" value=\"{{answer}}\" ' +\n      'class=\"{{CSS.ANSWER}} form-control d-inline mx-2\" />' +\n      '</div>' +\n      '<div class=\"{{CSS.LEFT}} form-group\">' +\n      '<a class=\"{{CSS.ADD}}\" title=\"{{STR.addmoreanswerblanks}}\">' +\n      '<img class=\"icon_smallicon\" src=\"' +\n      M.util.image_url('t/add', 'core') + '\"></a>' +\n      '<a class=\"{{CSS.DELETE}}\" title=\"{{STR.delete}}\">' +\n      '<img class=\"icon_smallicon\" src=\"' +\n      M.util.image_url('t/delete', 'core') + '\"></a>' +\n      '<a class=\"{{CSS.RAISE}}\" title=\"{{STR.up}}\">' +\n      '<img class=\"icon_smallicon\" src=\"' +\n      M.util.image_url('t/up', 'core') + '\"></a>' +\n      '<a class=\"{{CSS.LOWER}}\" title=\"{{STR.down}}\">' +\n      '<img class=\"icon_smallicon\" src=\"' +\n      M.util.image_url('t/down', 'core') + '\"></a>' +\n      '</div>' +\n      '</div>' +\n      '{{#numerical}}' +\n      '<div class=\"row\">' +\n      '<div class=\"{{CSS.RIGHT}} form-group\">' +\n      '<label for=\"{{id}}_tolerance\">{{{STR.tolerance}}}</label>' +\n      '<input id=\"{{id}}_tolerance\" type=\"text\" value=\"{{tolerance}}\" ' +\n      'class=\"{{CSS.TOLERANCE}} form-control d-inline mx-2\" />' +\n      '</div>' +\n      '</div>' +\n      '{{/numerical}}' +\n      '<div class=\"row\">' +\n      '<div class=\"{{CSS.RIGHT}} form-group\">' +\n      '<label for=\"{{id}}_feedback\">{{STR.feedback}}</label>' +\n      '<input id=\"{{id}}_feedback\" type=\"text\" value=\"{{feedback}}\" ' +\n      'class=\"{{CSS.FEEDBACK}} form-control d-inline mx-2\" />' +\n      '</div>' +\n      '<div class=\"{{CSS.RIGHT}} form-group\">' +\n      '<label id=\"{{id}}_grade\">{{STR.grade}}</label>' +\n      '<select id=\"{{id}}_grade\" class=\"{{CSS.FRACTION}} custom-select mx-2\">' +\n      '{{{fractionOptions}}}' +\n      '</select>' +\n      '</div>' +\n      '</div></li>' +\n      '{{/answerdata}}</ol></div>' +\n      '</form>' +\n      '</div>',\n    TYPE: '<div class=\"tiny_cloze mt-0 mx-2 mb-2\">' +\n      '<p>{{STR.chooseqtypetoadd}}</p>' +\n      '<form name=\"tiny_cloze_form\">' +\n      '<div class=\"{{CSS.TYPE}} form-check\">' +\n      '{{#types}}' +\n      '<div class=\"option\">' +\n      '<input name=\"qtype\" id=\"qtype_qtype_{{type}}\" value=\"{{type}}\" type=\"radio\" class=\"form-check-input\">' +\n      '<label for=\"qtype_qtype_{{type}}\">' +\n      '<span class=\"typename\">{{type}}</span>' +\n      '{{#subtypes}}' +\n      '<input name=\"subqtype\" id=\"qtype_qtype_{{subtypes}}\" value=\"{{subtypes}}\"' +\n      'type=\"radio\" class=\"form-check-input {{CSS.SUMMARY}}\">' +\n      '<label for=\"qtype_qtype_{{subtypes}}\">' +\n      //  '<span class=\"typename\">{{subtypes}}</span>' +\n      '<span class=\"{{CSS.SUMMARY}}\"><h6>{{name}}</h6><p>{{summary}}</p>' +\n      '<ul>{{#options}}' +\n      '<li>{{.}}</li>' +\n      '{{/options}}</ul>' +\n      '{{/subtypes}}' +\n      '</span>' +\n      '</label></div>' +\n      '{{/types}}' +\n      '</form></div>',\n    FOOTER: '<button type=\"button\" class=\"btn btn-secondary\" data-action=\"cancel\">{{cancel}}</button>' +\n      '<button type=\"button\" class=\"btn btn-primary\" data-action=\"save\">{{submit}}</button>',\n  };\n  const FRACTIONS = [\n    {value: 100},\n    {value: 50},\n    {value: 33.33333},\n    {value: 25},\n    {value: 20},\n    {value: 16.66667},\n    {value: 14.28571},\n    {value: 12.5},\n    {value: 11.11111},\n    {value: 10},\n    {value: 5},\n    {value: 0},\n    {value: -5},\n    {value: -10},\n    {value: -11.11111},\n    {value: -12.5},\n    {value: -14.28571},\n    {value: -16.66667},\n    {value: -20},\n    {value: -25},\n    {value: -33.333},\n    {value: -50},\n    {value: -100},\n  ];\n\n// Language strings used in the modal dialogue.\nlet STR = {};\nconst getStr = async() => {\n  const res = await Promise.all([\n    getString('answer', 'question'),\n    getString('chooseqtypetoadd', 'question'),\n    getString('defaultmark', 'question'),\n    getString('feedback', 'question'),\n    getString('correct', 'question'),\n    getString('incorrect', 'question'),\n    getString('addmoreanswerblanks', 'qtype_calculated'),\n    getString('delete', 'core'),\n    getString('up', 'core'),\n    getString('down', 'core'),\n    getString('tolerance', 'qtype_calculated'),\n    getString('grade', 'grades'),\n    getString('caseno', 'mod_quiz'),\n    getString('caseyes', 'mod_quiz'),\n    getString('answersingleno', 'qtype_multichoice'),\n    getString('answersingleyes', 'qtype_multichoice'),\n    getString('layoutselectinline', 'qtype_multianswer'),\n    getString('layouthorizontal', 'qtype_multianswer'),\n    getString('layoutvertical', 'qtype_multianswer'),\n    getString('shufflewithin', 'mod_quiz'),\n    getString('layoutmultiple_horizontal', 'qtype_multianswer'),\n    getString('layoutmultiple_vertical', 'qtype_multianswer'),\n    getString('pluginnamesummary', 'qtype_multichoice'),\n    getString('short_summary_nocase', 'tiny_cloze'),\n    getString('short_summary_yescase', 'tiny_cloze'),\n    getString('pluginnamesummary', 'qtype_numerical'),\n    getString('multichoice', component),\n    getString('multiresponse', component),\n    getString('numerical', 'mod_quiz'),\n    getString('shortanswerno', 'tiny_cloze'),\n    getString('shortansweryes', 'tiny_cloze'),\n    getString('cancel', 'core'),\n    getString('select', component),\n    getString('insert', component),\n    getString('pluginname', component),\n  ]);\n  [\n    'answer',\n    'chooseqtypetoadd',\n    'defaultmark',\n    'feedback',\n    'correct',\n    'incorrect',\n    'addmoreanswerblanks',\n    'delete',\n    'up',\n    'down',\n    'tolerance',\n    'grade',\n    'caseno',\n    'caseyes',\n    'singleno',\n    'singleyes',\n    'selectinline',\n    'horizontal',\n    'vertical',\n    'shuffle',\n    'multi_horizontal',\n    'multi_vertical',\n    'summary_multichoice',\n    'summary_shortanswer_nocase',\n    'summary_shortanswer_yescase',\n    'summary_numerical',\n    'multichoice',\n    'multiresponse',\n    'numerical',\n    'shortanswerno',\n    'shortansweryes',\n    'btn_cancel',\n    'btn_select',\n    'btn_insert',\n    'title',\n  ].map((l, i) => {\n    STR[l] = res[i];\n    return ''; // Make the linter happy.\n  });\n};\n\nconst getMainQuestionTypes = function() {\n  return [\n    {\n      type: 'Multiple choice',\n      subtypes: [\n        {\n          'type': 'MULTICHOICE',\n          'abbr': ['MC'],\n          'name': STR.multichoice,\n          'summary': STR.summary_multichoice,\n          'options': [STR.selectinline, STR.singleyes],\n        },\n        {\n          'type': 'MULTICHOICE_H',\n          'abbr': ['MCH'],\n          'name': STR.multichoice,\n          'summary': STR.summary_multichoice,\n          'options': [STR.horizontal, STR.singleyes],\n        },\n        {\n          'type': 'MULTICHOICE_V',\n          'abbr': ['MCV'],\n          'name': STR.multichoice,\n          'summary': STR.summary_multichoice,\n          'options': [STR.vertical, STR.singleyes],\n        },\n        {\n          'type': 'MULTICHOICE_S',\n          'abbr': ['MCS'],\n          'name': STR.multichoice,\n          'summary': STR.summary_multichoice,\n          'options': [STR.selectinline, STR.shuffle, STR.singleyes],\n        },\n        {\n          'type': 'MULTICHOICE_HS',\n          'abbr': ['MCHS'],\n          'name': STR.multichoice,\n          'summary': STR.summary_multichoice,\n          'options': [STR.horizontal, STR.shuffle, STR.singleyes],\n        },\n        {\n          'type': 'MULTICHOICE_VS',\n          'abbr': ['MCVS'],\n          'name': STR.multichoice,\n          'summary': STR.summary_multichoice,\n          'options': [STR.vertical, STR.shuffle, STR.singleyes],\n        },\n      ]\n    },\n    {\n      type: 'MULTIRESPONSE',\n      subtypes: [\n        {\n          'type': 'MULTIRESPONSE',\n          'abbr': ['MR'],\n          'name': STR.multiresponse,\n          'summary': STR.summary_multichoice,\n          'options': [STR.multi_vertical, STR.singleno],\n        },\n        {\n          'type': 'MULTIRESPONSE_H',\n          'abbr': ['MRH'],\n          'name': STR.multiresponse,\n          'summary': STR.summary_multichoice,\n          'options': [STR.multi_horizontal, STR.singleno],\n        },\n        {\n          'type': 'MULTIRESPONSE_S',\n          'abbr': ['MRS'],\n          'name': STR.multiresponse,\n          'summary': STR.summary_multichoice,\n          'options': [STR.multi_vertical, STR.shuffle, STR.singleno],\n        },\n        {\n          'type': 'MULTIRESPONSE_HS',\n          'abbr': ['MRHS'],\n          'name': STR.multiresponse,\n          'summary': STR.summary_multichoice,\n          'options': [STR.multi_horizontal, STR.shuffle, STR.singleno],\n        },\n      ]\n    },\n    {\n      type: 'NUMERICAL',\n      subtypes: [\n        {\n          'type': 'NUMERICAL',\n          'abbr': ['NM'],\n          'name': STR.numerical,\n          'summary': STR.summary_numerical,\n        },\n      ]\n    },\n    {\n      type: 'KURZ',\n      subtypes: [\n        {\n          'type': 'SHORTANSWER',\n          'abbr': ['SA', 'MW'],\n          'name': STR.shortanswer,\n          'summary': STR.summary_shortanswer_nocase,\n          'options': [STR.shortanswerno],\n        },\n        {\n          'type': 'SHORTANSWER_C',\n          'abbr': ['SAC', 'MWC'],\n          'name': STR.shortanswer,\n          'summary': STR.summary_shortanswer_yescase,\n          'options': [STR.shortansweryes],\n        },\n      ],\n    },\n  ];\n};\n\nconst getQuestionTypes = function() {\n  return [\n    {\n      'type': 'MULTICHOICE',\n      'abbr': ['MC'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.selectinline, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_H',\n      'abbr': ['MCH'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.horizontal, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_V',\n      'abbr': ['MCV'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.vertical, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_S',\n      'abbr': ['MCS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.selectinline, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_HS',\n      'abbr': ['MCHS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.horizontal, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTICHOICE_VS',\n      'abbr': ['MCVS'],\n      'name': STR.multichoice,\n      'summary': STR.summary_multichoice,\n      'options': [STR.vertical, STR.shuffle, STR.singleyes],\n    },\n    {\n      'type': 'MULTIRESPONSE',\n      'abbr': ['MR'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_vertical, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_H',\n      'abbr': ['MRH'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_horizontal, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_S',\n      'abbr': ['MRS'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_vertical, STR.shuffle, STR.singleno],\n    },\n    {\n      'type': 'MULTIRESPONSE_HS',\n      'abbr': ['MRHS'],\n      'name': STR.multiresponse,\n      'summary': STR.summary_multichoice,\n      'options': [STR.multi_horizontal, STR.shuffle, STR.singleno],\n    },\n    {\n      'type': 'NUMERICAL',\n      'abbr': ['NM'],\n      'name': STR.numerical,\n      'summary': STR.summary_numerical,\n    },\n    {\n      'type': 'SHORTANSWER',\n      'abbr': ['SA', 'MW'],\n      'name': STR.shortanswer,\n      'summary': STR.summary_shortanswer,\n      'options': [STR.caseno],\n    },\n    {\n      'type': 'SHORTANSWER_C',\n      'abbr': ['SAC', 'MWC'],\n      'name': STR.shortanswer,\n      'summary': STR.summary_shortanswer,\n      'options': [STR.caseyes],\n    },\n  ];\n};\n\n/**\n * The editor instance that is injected via the onInit() function.\n *\n * @type tinymce.Editor\n * @private\n */\nlet _editor = null;\n\n/**\n * Remember the blur event to reapply the marker <span>s because they get lost in the first place.\n * @type boolean\n * @private\n */\nlet _isBlurred = false;\n\n/**\n * A reference to the currently open form.\n *\n * @param _form\n * @type Node\n * @private\n */\nlet _form = null;\n\n/**\n * An array containing the current answers options\n *\n * @param _answerdata\n * @type Array\n * @private\n */\nlet _answerdata = [];\n\n/**\n * The sub question type to be edited\n *\n * @param _qtype\n * @type String\n * @private\n */\nlet _qtype = null;\n\n/**\n * Remember the pos of the selected node.\n * @type {number}\n * @private\n */\nlet _selectedOffset = -1;\n\n/**\n * The maximum marks for the sub question\n *\n * @param _marks\n * @type Integer\n * @private\n */\nlet _marks = 1;\n\n/**\n * The modal dialogue to be displayed when designing the cloze question types.\n * @type Modal|null\n */\nlet _modal = null;\n\n/**\n * Inject the editor instance and add markers to the cloze question texts.\n * @param {tinymce.Editor} ed\n */\nconst onInit = function(ed) {\n  _editor = ed; // The current editor instance.\n  // Hide the new question marker from the user.\n  ed.dom.addStyle('.' + markerClass + '.new { display:none;}');\n  // Add the marker spans.\n  _addMarkers();\n  // And get the language strings.\n  getStr();\n};\n\n/**\n * Create the modal.\n * @return {Promise<void>}\n * @private\n */\nconst _createModal = async function() {\n  // Create the modal dialogue. Depending on whether we have a selected node or not, the content is different.\n  _modal = await ModalFactory.create({\n    type: Modal.TYPE,\n    title: STR.title,\n    templateContext: {\n      elementid: _editor.id\n    },\n    removeOnClose: true,\n    large: true,\n  });\n};\n\n/**\n * Display modal dialogue to edit a cloze question. Either a form is displayed to edit subquestion or a list\n * of possible questions is show.\n *\n * @method displayDialogue\n * @private\n */\nconst displayDialogue = async function() {\n  await _createModal();\n\n  // Resolve whether cursor is in a subquestion.\n  var subquestion = resolveSubquestion();\n  if (subquestion) {\n    // Subquestion found, remember which node of the marker nodes is selected.\n    _selectedOffset = indexOfNode(_editor.dom.select('.' + markerClass), subquestion);\n    _parseSubquestion(subquestion.innerHTML);\n    _setDialogueContent(_qtype);\n  } else {\n    // No subquestion found, no offset to remember, but we place a marker at the position where the question\n    // will be inserted later.\n    _selectedOffset = -1;\n    _editor.insertContent(markerSpan.replace(markerClass, markerClass + ' new') + markerNewPos + '</span>');\n    _setDialogueContent();\n  }\n};\n\n/**\n * Search for cloze questions based on a regular expression. All the matching snippets at least contain the cloze\n * question definition. Although Moodle does not support encapsulated other functions within curly brackets, we\n * still try to find the correct closing bracket. The so extracted cloze question is surrounded by a marker span\n * element, that contains attributes so that the content inside the span cannot be modified by the editor (in the\n * textarea). Also, this makes it a lot easier to select the question, edit it in the dialogue and replace the result\n * in the existing text area.\n */\nconst _addMarkers = function() {\n\n  let content = _editor.getContent();\n  let newContent = '';\n\n  // Check if there is already a marker span. In this case we do not have to do anything.\n  if (content.indexOf(markerClass) !== -1) {\n    return;\n  }\n\n  let m;\n  do {\n    m = content.match(reQtype);\n    if (!m) { // No match of a cloze question, then we are done.\n      newContent += content;\n      break;\n    }\n    // Copy the current match to the new string preceded with the <span>.\n    const pos = content.indexOf(m[0]);\n    newContent += content.substring(0, pos) + markerSpan + content.substring(pos, pos + m[0].length);\n    content = content.substring(pos + m[0].length);\n\n    // Count the { in the string, should be just one (the very first one at position 0).\n    let level = (m[0].match(/\\{/g) || []).length;\n    if (level === 1) {\n      // If that's the case, we close the span and the cloze question text is the innerHTML of that marker span.\n      newContent += '</span>';\n      continue; // Look for the next matching cloze question.\n    }\n    // If there are more { than } in the string, then we did not find the corresponding } that belongs to the cloze string.\n    while (level > 1) {\n      const a = content.indexOf('{');\n      const b = content.indexOf('}');\n      if (a > -1 && b > -1 && a < b) { // The { is before another } so remember to find as many } until we back at level 1.\n        level++;\n        newContent = content.substring(0, a);\n        content = content.substring(a + 1);\n      } else if (b > -1) { // We found a closing } to a previously {.\n        newContent = content.substring(0, b);\n        content = content.substring(b + 1);\n        level--;\n      } else {\n        level = 1; // Should not happen, just to stop the endless loop.\n      }\n    }\n    newContent += '</span>';\n  } while (m);\n  newContent = newContent.replace(markerNewPos, markerSpan.replace(markerClass, markerClass + ' new') + markerNewPos + '</span>');\n  _editor.setContent(newContent);\n};\n\n/**\n * Look for the marker span elements around a cloze question and remove that span. Also, the marker for a new\n * node to be inserted would be removed here as well.\n */\nconst _removeMarkers = function() {\n  for (const span of _editor.dom.select('span.' + markerClass)) {\n    _editor.dom.setOuterHTML(span, span.classList.contains('new') ? '' : span.innerHTML);\n  }\n};\n\n/**\n * When the source code view dialogue is show, we must remove the spans around the cloze question strings\n * from the editor content and add them again when the dialogue is closed.\n * Since this event is also triggered when the editor data is saved, we use this function to remove the\n * highlighting content at that time.\n * @param {object} content\n */\nconst onBeforeGetContent = function(content) {\n  if (!isNull(content.source_view) && content.source_view === true) {\n    // If the user clicks on 'Cancel' or the close button on the html\n    // source code dialog view, make sure we re-add the visual styling.\n    var onClose = function() {\n      _editor.off('close', onClose);\n      _addMarkers();\n    };\n    _editor.on('CloseWindow', () => {\n      onClose();\n    });\n    // Remove markers only if modal is not called, otherwise we will lose our new question marker.\n    if (!_modal) {\n      _removeMarkers();\n    }\n  }\n};\n\n/**\n * When the content is supposed to be saved (happens also when the editor window is blurred)\n * then we need to remove or markers (e.g. <span> elements that encapsulate the cloze\n * question strings).\n * @param {object} content\n */\nconst onPreProcess = function(content) {\n  if (!isNull(content.save) && content.save === true && !_modal) {\n    // Remove markers only if modal is not called, otherwise we will lose our new question marker.\n    _removeMarkers();\n  }\n};\n\n/**\n * When the blur event was triggered, the editor is still there, we need to reapply\n * the previously removed styling. If this was a submit event, then do not reapply the\n * styling to prevent that this is saved in the database.\n * @param {object} content\n */\nconst onPostProcess = function(content) {\n  if (!isNull(content.save) && content.save === true && _isBlurred) {\n    _addMarkers();\n    _isBlurred = false;\n  }\n};\n\n/**\n * Notice when the editor content is blurred, because the focus left the editor window.\n */\nconst onBlur = function() {\n  _isBlurred = true;\n};\n\n/**\n * Set the dialogue content for the tool, attaching any required events. Either the modal dialogue displays\n * a list of the question types for the form for a particular question to edit. The set content is also\n * called when the form has changed (up or down move, deletion and adding a response). We must be aware of that\n * an event to the dialogue buttons must attached once only. Therefore when the form content is modified, only\n * the form events for the answers are set again, the general events are nor (nomodalevents is true then).\n *\n * @method _setDialogueContent\n * @param {String} qtype The question type to be used\n * @param {boolean} nomodalevents Optional do not attach events.\n * @private\n */\nconst _setDialogueContent = function(qtype, nomodalevents) {\n  const footer = Mustache.render(TEMPLATE.FOOTER, {\n    cancel: STR.btn_cancel,\n    submit: !qtype ? STR.btn_select : STR.btn_insert,\n  });\n  let contentText;\n  if (!qtype) {\n    contentText = Mustache.render(TEMPLATE.TYPE, {\n      CSS: CSS,\n      STR: STR,\n      qtype: _qtype,\n      types: getMainQuestionTypes()\n    });\n  } else {\n    contentText = Mustache.render(TEMPLATE.FORM, {\n      CSS: CSS,\n      STR: STR,\n      answerdata: _answerdata,\n      elementid: getUuid(),\n      qtype: _qtype,\n      name: getMainQuestionTypes().filter(q => _qtype === q.type)[0].name,\n      marks: _marks,\n      numerical: (_qtype === 'NUMERICAL' || _qtype === 'NM')\n    });\n  }\n  _modal.setBody(contentText);\n  _modal.setFooter(footer);\n  _modal.show();\n  const $root = _modal.getRoot();\n  _form = $root.get(0).querySelector('form');\n\n  if (!nomodalevents) {\n    _modal.registerEventListeners();\n    _modal.registerCloseOnSave();\n    _modal.registerCloseOnCancel();\n    $root.on(ModalEvents.cancel, _cancel);\n\n    if (!qtype) { // For the question list we need the choice handler only, and we are done.\n      $root.on(ModalEvents.save, _choiceHandler);\n      return;\n    } // Handler to add the question string to the editor content.\n    $root.on(ModalEvents.save, _setSubquestion);\n  }\n  // The form needs events for the icons to move up/down, add or delete a response.\n  const getTarget = e => {\n    let p = e.target;\n    while (!isNull(p) && p.nodeType === 1 && p.tagName !== 'A') {\n      p = p.parentNode;\n    }\n    if (isNull(p.classList)) {\n      return null;\n    }\n    return p;\n  };\n\n  _form.addEventListener('click', e => {\n    const p = getTarget(e);\n    if (isNull(p)) {\n      return;\n    }\n    if (p.classList.contains(CSS.DELETE)) {\n      e.preventDefault();\n      _deleteAnswer(p);\n      return;\n    }\n    if (p.classList.contains(CSS.ADD)) {\n      e.preventDefault();\n      _addAnswer(p);\n      return;\n    }\n    if (p.classList.contains(CSS.LOWER)) {\n      e.preventDefault();\n      _lowerAnswer(p);\n      return;\n    }\n    if (p.classList.contains(CSS.RAISE)) {\n      e.preventDefault();\n      _raiseAnswer(p);\n    }\n  });\n  _form.addEventListener('keyup', e => {\n    const p = getTarget(e);\n    if (isNull(p)) {\n      return;\n    }\n    if (p.classList.contains(CSS.ANSWER) || p.classList.contains(CSS.FEEDBACK)) {\n      e.preventDefault();\n      _addAnswer(p);\n    }\n  });\n};\n\n/**\n * Handle question choice.\n *\n * @method _choiceHandler\n * @private\n * @param {Event} e Event from button click in chooser\n */\nconst _choiceHandler = function(e) {\n  e.preventDefault();\n  let qtype = _form.querySelector('input[name=qtype]:checked');\n  if (qtype) {\n    _qtype = qtype.value;\n  }\n  const one = _qtype.indexOf('SHORTANSWER') !== -1 || _qtype === 'NUMERICAL';\n  const blankAnswer = {\n    id: getUuid(),\n    answer: '',\n    feedback: '',\n    fraction: 100,\n    fractionOptions: getFractionOptions(one ? '=' : ''),\n    tolerance: 0\n  };\n  _answerdata = one ? [blankAnswer] : [blankAnswer, blankAnswer, blankAnswer];\n  _modal.destroy();\n  // Our choice is stored in _qtype. We need to create the modal dialogue with the form now.\n  _createModal().then(() => {\n    _setDialogueContent(_qtype);\n    _form.querySelector('.' + CSS.ANSWER).focus();\n    return ''; // Make the linter happy.\n  }).catch();\n};\n\n/**\n * Parse question and set properties found.\n *\n * @method _parseSubquestion\n * @private\n * @param {String} question The question string\n */\nconst _parseSubquestion = function(question) {\n  _answerdata = []; // Flush answers to have an empty dialogue if something goes wrong parsing the question string.\n  const parts = reQtype.exec(question);\n  reQtype.lastIndex = 0; // Reset lastIndex so that the next match starts from the beginning of the question string.\n  if (!parts) {\n    return;\n  }\n  _marks = parts[1];\n  _qtype = parts[2];\n  // Convert the short notation to the long form e.g. SA to SHORTANSWER.\n  if (_qtype.length < 5) {\n    getQuestionTypes().forEach(l => {\n      for (const a of l.abbr) {\n        if (a === _qtype) {\n          _qtype = l.type;\n          return;\n        }\n      }\n    });\n  }\n  const answers = parts[7].match(/(\\\\.|[^~])*/g);\n  if (!answers) {\n    return;\n  }\n  answers.forEach(function(answer) {\n    const options = /^(%(-?[.0-9]+)%|(=?))((\\\\.|[^#])*)#?(.*)/.exec(answer);\n    if (options && options[4]) {\n      let frac = 0;\n      if (options[3]) {\n        frac = options[3] === '=' ? '=' : 100;\n      } else if (options[2]) {\n        frac = options[2];\n      }\n      if (_qtype === 'NUMERICAL' || _qtype === 'NM') {\n        const tolerance = /^([^:]*):?(.*)/.exec(options[4])[2] || 0;\n        _answerdata.push({\n          id: getUuid(),\n          answer: strdecode(options[4].replace(/:.*/, '')),\n          feedback: strdecode(options[6]),\n          tolerance: tolerance,\n          fraction: frac,\n          fractionOptions: getFractionOptions(frac),\n        });\n        return;\n      }\n      _answerdata.push({\n        answer: strdecode(options[4]),\n        id: getUuid(),\n        feedback: strdecode(options[6]),\n        fraction: frac,\n        fractionOptions: getFractionOptions(frac),\n      });\n    }\n  });\n};\n\n/**\n * Insert a new set of answer blanks below the button.\n *\n * @method _addAnswer\n * @param {Node} a Node that is the referred element\n * @private\n */\nconst _addAnswer = function(a) {\n  let index = indexOfNode(_form.querySelectorAll('.' + CSS.ADD), a);\n  if (index === -1) {\n    index = indexOfNode(_form.querySelectorAll('.' + CSS.ANSWER + ', .' + CSS.FEEDBACK), a);\n    if (index !== -1) {\n      index = Math.floor(index / 2) + 1;\n    }\n  }\n  let fraction = '';\n  if (a.closest('li')) {\n    fraction = a.closest('li').querySelector('.' + CSS.FRACTION).value;\n    index = indexOfNode(_form.querySelectorAll('li'), a.closest('li')) + 1;\n  }\n  let tolerance = 0;\n  if (a.closest('li') && a.closest('li').querySelector('.' + CSS.TOLERANCE)) {\n    tolerance = a.closest('li').querySelector('.' + CSS.TOLERANCE).value;\n  }\n  _getFormData();\n  _answerdata.splice(index, 0, {\n    id: getUuid(),\n    answer: '',\n    feedback: '',\n    fraction: fraction,\n    fractionOptions: getFractionOptions(fraction),\n    tolerance: tolerance\n  });\n  _setDialogueContent(_qtype, true);\n  _form.querySelectorAll('.' + CSS.ANSWER).item(index).focus();\n};\n\n/**\n * Delete set of answer next to the button.\n *\n * @method _deleteAnswer\n * @param {Node} a Node that is the referred element\n * @private\n */\nconst _deleteAnswer = function(a) {\n  let index = indexOfNode(_form.querySelectorAll('.' + CSS.DELETE), a);\n  if (index === -1) {\n    index = indexOfNode(_form.querySelectorAll('li'), a.closest('li'));\n  }\n  _getFormData();\n  _answerdata.splice(index, 1);\n  _setDialogueContent(_qtype, true);\n  const answers = _form.querySelectorAll('.' + CSS.ANSWER);\n  index = Math.min(index, answers.length - 1);\n  answers.item(index).focus();\n};\n\n/**\n * Lower answer option\n *\n * @method _lowerAnswer\n * @param {Node} a Node that is the referred element\n * @private\n */\nconst _lowerAnswer = function(a) {\n  const li = a.closest('li');\n  li.before(li.nextSibling);\n  li.querySelector('.' + CSS.ANSWER).focus();\n};\n\n/**\n * Raise answer option\n *\n * @method _raiseAnswer\n * @param {Node} a Node that is the referred element\n * @private\n */\nconst _raiseAnswer = function(a) {\n  const li = a.closest('li');\n  li.after(li.previousSibling);\n  li.querySelector('.' + CSS.ANSWER).focus();\n};\n\n/**\n * Reset and hide form.\n *\n * @method _cancel\n * @param {Event} e Event from button click\n * @private\n */\nconst _cancel = function(e) {\n  e.preventDefault();\n  // In case there is a marker where the new question should be inserted in the text it needs to be removed.\n  for (const span of _editor.dom.select('.' + markerClass + '.new')) {\n    span.remove();\n  }\n  _modal.destroy();\n  _editor.focus();\n  _modal = null;\n};\n\n/**\n * Insert question string into editor content and reset and hide form.\n *\n * @method _setSubquestion\n * @param {Event} e Event from button click\n * @private\n */\nconst _setSubquestion = function(e) {\n  e.preventDefault();\n  _getFormData();\n\n  // Build the parser function from the data, that is going to be placed into the editor content.\n  let question = '{' + _marks + ':' + _qtype + ':';\n\n  for (let i = 0; i < _answerdata.length; i++) {\n    question += _answerdata[i].fraction && !isNaN(_answerdata[i].fraction)\n      ? '%' + _answerdata[i].fraction + '%' : _answerdata[i].fraction;\n    question += strencode(_answerdata[i].answer);\n    if (_answerdata[i].tolerance) {\n      question += ':' + _answerdata[i].tolerance;\n    }\n    if (_answerdata[i].feedback) {\n      question += '#' + strencode(_answerdata[i].feedback);\n    }\n    if (i < _answerdata.length - 1) {\n      question += '~';\n    }\n  }\n  question += '}';\n\n  _modal.destroy();\n  _modal = null;\n  _editor.focus();\n  if (_selectedOffset > -1) { // We have to replace one of the marker spans (the innerHTML contains the question string).\n    _editor.dom.select('.' + markerClass)[_selectedOffset].innerHTML = question;\n  } else {\n    // Find the new maker, add the question string and remove the new flag.\n    const newEl = _editor.dom.select('.' + markerClass + '.new');\n    if (newEl.length > 0) {\n      newEl[0].innerHTML = question;\n      newEl[0].classList.remove('new');\n    }\n  }\n};\n\n/**\n * Read the form data, process it and store the result in the internal  _answerdata array.\n *\n * @method _getFormData\n * @private\n */\nconst _getFormData = function() {\n  _answerdata = [];\n  let answer;\n  const answers = _form.querySelectorAll('.' + CSS.ANSWER);\n  const feedbacks = _form.querySelectorAll('.' + CSS.FEEDBACK);\n  const fractions = _form.querySelectorAll('.' + CSS.FRACTION);\n  const tolerances = _form.querySelectorAll('.' + CSS.TOLERANCE);\n  for (let i = 0; i < answers.length; i++) {\n    answer = answers.item(i).value;\n    if (_qtype === 'NM' || _qtype === 'NUMERICAL') {\n      answer = Number(answer);\n    }\n    _answerdata.push({\n      answer: answer,\n      id: getUuid(),\n      feedback: feedbacks.item(i).value,\n      fraction: fractions.item(i).value,\n      fractionOptions: getFractionOptions(fractions.item(i).value),\n      tolerance: !isNull(tolerances.item(i)) ? tolerances.item(i).value : 0\n    });\n    _marks = _form.querySelector('.' + CSS.MARKS).value;\n  }\n};\n\n/**\n * Check whether cursor is in a subquestion and return subquestion text if\n * true.\n *\n * @method resolveSubquestion\n * @return {Mixed} The selected node of with the subquestion if found, false otherwise.\n */\nconst resolveSubquestion = function() {\n  let span = _editor.selection.getStart();\n  if (!isNull(span.classList) && span.classList.contains(markerClass)) {\n    return span;\n  }\n  _editor.dom.getParents(span, elm => {\n    // Are we in a span that encapsulates the cloze question?\n    if (!isNull(elm.classList) && elm.classList.contains(markerClass)) {\n      return elm;\n    }\n    return false;\n  });\n  return false;\n};\n\nexport {\n  displayDialogue,\n  resolveSubquestion,\n  onInit,\n  onBeforeGetContent,\n  onPreProcess,\n  onPostProcess,\n  onBlur\n};\n"],"names":["isNull","a","strdecode","t","String","replace","strencode","indexOfNode","list","node","i","length","getUuid","crypto","randomUUID","Math","floor","random","toString","getFractionOptions","s","html","STR","incorrect","correct","FRACTIONS","forEach","item","value","markerClass","markerSpan","markerNewPos","reQtype","CSS","ANSWER","ANSWERS","ADD","CANCEL","DELETE","FEEDBACK","FRACTION","LEFT","LOWER","RIGHT","MARKS","DUPLICATE","RAISE","SUBMIT","SUMMARY","TOLERANCE","TYPE","TEMPLATE","FORM","M","util","image_url","FOOTER","getMainQuestionTypes","type","subtypes","multichoice","summary_multichoice","selectinline","singleyes","horizontal","vertical","shuffle","multiresponse","multi_vertical","singleno","multi_horizontal","numerical","summary_numerical","shortanswer","summary_shortanswer_nocase","shortanswerno","summary_shortanswer_yescase","shortansweryes","_editor","_isBlurred","_form","_answerdata","_qtype","_selectedOffset","_marks","_modal","ed","dom","addStyle","_addMarkers","async","res","Promise","all","component","map","l","getStr","_createModal","ModalFactory","create","Modal","title","templateContext","elementid","id","removeOnClose","large","subquestion","resolveSubquestion","select","_parseSubquestion","innerHTML","_setDialogueContent","insertContent","m","content","getContent","newContent","indexOf","match","pos","substring","level","b","setContent","_removeMarkers","span","setOuterHTML","classList","contains","source_view","onClose","off","on","save","qtype","nomodalevents","footer","Mustache","render","cancel","btn_cancel","submit","btn_insert","btn_select","contentText","answerdata","name","filter","q","marks","types","setBody","setFooter","show","$root","getRoot","get","querySelector","registerEventListeners","registerCloseOnSave","registerCloseOnCancel","ModalEvents","_cancel","_choiceHandler","_setSubquestion","getTarget","e","p","target","nodeType","tagName","parentNode","addEventListener","preventDefault","_deleteAnswer","_addAnswer","_lowerAnswer","_raiseAnswer","one","blankAnswer","answer","feedback","fraction","fractionOptions","tolerance","destroy","then","focus","catch","question","parts","exec","lastIndex","summary_shortanswer","caseno","caseyes","abbr","answers","options","frac","push","index","querySelectorAll","closest","_getFormData","splice","min","li","before","nextSibling","after","previousSibling","remove","isNaN","newEl","feedbacks","fractions","tolerances","Number","selection","getStart","getParents","elm"],"mappings":"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"}